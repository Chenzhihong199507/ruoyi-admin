const d={id:"id",pid:"parentId",children:"children"},l=e=>Object.assign({},d,e);function p(e,o={}){const c=l(o),t=new Map,n=[],{id:s,pid:f,children:i}=c;for(const r of e)r[i]=r[i]||[],t.set(r[s],r);for(const r of e){const a=t.get(r[f]);(a?a[i]:n).push(r)}return n}function N(e,o={}){o=l(o);const{children:c}=o,t=[...e];for(let n=0;n<t.length;n++)t[n][c]&&t.splice(n+1,0,...t[n][c]);return t}function E(e,o="label",c="-"){function t(n,s=[]){const f=[...s,n[o]];n.fullName=f.join(c),n.children&&n.children.length>0&&n.children.forEach(i=>{t(i,f)})}e.forEach(n=>{t(n)})}function h(e,o,c={}){const t=l(c),{id:n,children:s}=t,f=[];function i(r,a){if(r[n]===a)return!0;if(r[s]){for(const u of r[s])if(i(u,a))return f.push(r[n]),!0}return!1}for(const r of e)if(i(r,o))break;return f.sort()}function I(e,o,c={}){const t=new Set;return o.forEach(n=>{h(e,n,c).forEach(s=>{t.add(s)})}),[...t].sort()}export{E as a,I as f,p as l,N as t};
