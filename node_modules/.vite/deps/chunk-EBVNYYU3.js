import {
  button_default
} from "./chunk-YQH7D7OK.js";
import {
  dynamicApp
} from "./chunk-IDL6XTLP.js";
import {
  VxeUI,
  createEvent,
  getConfig,
  require_xe_utils,
  usePermission,
  useSize
} from "./chunk-U64PXA5N.js";
import {
  createCommentVNode,
  defineComponent,
  h,
  provide
} from "./chunk-BYNCQTQY.js";
import {
  __toESM
} from "./chunk-PR4QN5HX.js";

// ../../node_modules/.pnpm/vxe-pc-ui@4.2.13/node_modules/vxe-pc-ui/es/button/src/button-group.js
var import_xe_utils = __toESM(require_xe_utils());
var button_group_default = defineComponent({
  name: "VxeButtonGroup",
  props: {
    options: Array,
    mode: String,
    status: String,
    round: Boolean,
    circle: Boolean,
    className: [String, Function],
    disabled: Boolean,
    permissionCode: [String, Number],
    size: {
      type: String,
      default: () => getConfig().buttonGroup.size || getConfig().size
    }
  },
  emits: [
    "click"
  ],
  setup(props, context) {
    const { slots, emit } = context;
    const xID = import_xe_utils.default.uniqueId();
    const computeMaps = {};
    const $xeButtonGroup = {
      xID,
      props,
      context,
      getComputeMaps: () => computeMaps
    };
    useSize(props);
    const { computePermissionInfo } = usePermission(props);
    const buttonGroupMethods = {
      dispatchEvent(type, params, evnt) {
        emit(type, createEvent(evnt, { $buttonGroup: $xeButtonGroup }, params));
      }
    };
    const buttonGroupPrivateMethods = {
      handleClick(params, evnt) {
        const { options } = props;
        const { name } = params;
        const option = options ? options.find((item) => item.name === name) : null;
        buttonGroupMethods.dispatchEvent("click", Object.assign(Object.assign({}, params), { option }), evnt);
      }
    };
    Object.assign($xeButtonGroup, buttonGroupMethods, buttonGroupPrivateMethods);
    const renderVN = () => {
      const { className, options } = props;
      const permissionInfo = computePermissionInfo.value;
      const defaultSlot = slots.default;
      if (!permissionInfo.visible) {
        return createCommentVNode();
      }
      return h("div", {
        class: ["vxe-button-group", className ? import_xe_utils.default.isFunction(className) ? className({ $buttonGroup: $xeButtonGroup }) : className : ""]
      }, defaultSlot ? defaultSlot({}) : options ? options.map((item, index) => {
        return h(button_default, Object.assign({ key: index }, item));
      }) : []);
    };
    $xeButtonGroup.renderVN = renderVN;
    provide("$xeButtonGroup", $xeButtonGroup);
    return $xeButtonGroup;
  },
  render() {
    return this.renderVN();
  }
});

// ../../node_modules/.pnpm/vxe-pc-ui@4.2.13/node_modules/vxe-pc-ui/es/button-group/index.js
var VxeButtonGroup = Object.assign({}, button_group_default, {
  install(app) {
    app.component(button_group_default.name, button_group_default);
  }
});
dynamicApp.use(VxeButtonGroup);
VxeUI.component(button_group_default);
var ButtonGroup = VxeButtonGroup;
var button_group_default2 = VxeButtonGroup;

export {
  VxeButtonGroup,
  ButtonGroup,
  button_group_default2 as button_group_default
};
//# sourceMappingURL=chunk-EBVNYYU3.js.map
